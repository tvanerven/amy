# Generated by Django 3.2.19 on 2023-06-16 12:13

from django.db import migrations

def create_tags(apps, schema_editor):

    Tag = apps.get_model("workshops", "Tag")

    TAGS = [
        {
            'name': 'automated-email' ,
            'priority': 0,
            'details': 'Only for automated emails',
        },
        {
            'name': 'Circuits',
            'priority': 4,
            'details': 'Events with only partial curriculum.',
        },
        {
            'name': 'online',
            'priority': 7,
            'details': 'Events taking place entirely online.',
        },
        {
            'name': 'ITT',
            'priority': 8,
            'details': 'Instructor Trainer Training (Trainer Training)',
        },
        {
            'name': 'cancelled',
            'priority': 9,
            'details': 'Events that were supposed to happen but due to some circumstances got cancelled',
        },
        {
            'name': 'unresponsive',
            'priority': 10,
            'details': "Events whose hosts and/or organizers aren't going to send data",
        },
        {
            'name': 'stalled',
            'priority': 11,
            'details': "Events with lost contact with the host or TTT events that aren't running.",
        },
        {
            'name': 'LSO',
            'priority': 13,
            'details': 'Lesson specific onboarding',
        },
        {
            'name': 'hackathon',
            'priority': 15,
            'details': 'Event is a hackathon',
        },
        {
            'name': 'CW',
            'priority': 16,
            'details': 'Curriculum Workshop',
        },
        {
            'name': 'TTT' ,
            'priority': 70,
            'details': 'Train the Trainers',
        },
        {
            'name': 'Pilot',
            'priority': 90,
            'details': 'To use for pilots of new or revamped curricula',
        },
        {
            'name': 'for-profit',
            'priority': 100,
            'details': 'Corporate or for-profit institutions that may be paying higher fees',
        },
        {
            'name': 'AE',
            'priority': 110,
            'details': 'Alumnus event',
        },
        {
            'name': 'HIC',
            'priority': 120,
            'details': 'Event occurring in a High income country',
        },
        {
            'name': 'LMIC',
            'priority': 130,
            'details': 'Event occurring in a Low or Middle Income Country',
        },
    ]

    for tag_object in TAGS:
        obj, created = Tag.objects.get_or_create(**tag_object)
        if created:
            print(f"Created {obj.name}")
        if not created:
            print(f"{obj.name} already created, skipping.")


class Migration(migrations.Migration):

    dependencies = [
        ('workshops', '0257_alter_membership_variant'),
    ]

    operations = [
        migrations.RunPython(create_tags),
    ]
